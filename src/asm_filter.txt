filter:
(master_record->srcPort == 107 || master_record->dstPort == 107 ||
master_record->srcPort == 106 || master_record->dstPort == 106 ||
master_record->srcPort == 105 || master_record->dstPort == 105);

nfdump`dofilter: -O0
nfdump[0x1000049a0] <+0>:   push   rbp
nfdump[0x1000049a1] <+1>:   mov    rbp, rsp
nfdump[0x1000049a4] <+4>:   mov    qword ptr [rbp - 0x8], rdi
nfdump[0x1000049a8] <+8>:   mov    rax, qword ptr [rbp - 0x8]
nfdump[0x1000049ac] <+12>:  movzx  ecx, word ptr [rax + 0x20]
nfdump[0x1000049b0] <+16>:  cmp    ecx, 0x6b
nfdump[0x1000049b3] <+19>:  mov    dl, 0x1
nfdump[0x1000049b5] <+21>:  mov    byte ptr [rbp - 0x9], dl
nfdump[0x1000049b8] <+24>:  je     0x100004a27               ; <+135> at nfdump.c
nfdump[0x1000049be] <+30>:  mov    rax, qword ptr [rbp - 0x8]
nfdump[0x1000049c2] <+34>:  movzx  ecx, word ptr [rax + 0x22]
nfdump[0x1000049c6] <+38>:  cmp    ecx, 0x6b
nfdump[0x1000049c9] <+41>:  mov    dl, 0x1
nfdump[0x1000049cb] <+43>:  mov    byte ptr [rbp - 0x9], dl
nfdump[0x1000049ce] <+46>:  je     0x100004a27               ; <+135> at nfdump.c
nfdump[0x1000049d4] <+52>:  mov    rax, qword ptr [rbp - 0x8]
nfdump[0x1000049d8] <+56>:  movzx  ecx, word ptr [rax + 0x20]
nfdump[0x1000049dc] <+60>:  cmp    ecx, 0x6a
nfdump[0x1000049df] <+63>:  mov    dl, 0x1
nfdump[0x1000049e1] <+65>:  mov    byte ptr [rbp - 0x9], dl
nfdump[0x1000049e4] <+68>:  je     0x100004a27               ; <+135> at nfdump.c
nfdump[0x1000049ea] <+74>:  mov    rax, qword ptr [rbp - 0x8]
nfdump[0x1000049ee] <+78>:  movzx  ecx, word ptr [rax + 0x22]
nfdump[0x1000049f2] <+82>:  cmp    ecx, 0x6a
nfdump[0x1000049f5] <+85>:  mov    dl, 0x1
nfdump[0x1000049f7] <+87>:  mov    byte ptr [rbp - 0x9], dl
nfdump[0x1000049fa] <+90>:  je     0x100004a27               ; <+135> at nfdump.c
nfdump[0x100004a00] <+96>:  mov    rax, qword ptr [rbp - 0x8]
nfdump[0x100004a04] <+100>: movzx  ecx, word ptr [rax + 0x20]
nfdump[0x100004a08] <+104>: cmp    ecx, 0x69
nfdump[0x100004a0b] <+107>: mov    dl, 0x1
nfdump[0x100004a0d] <+109>: mov    byte ptr [rbp - 0x9], dl
nfdump[0x100004a10] <+112>: je     0x100004a27               ; <+135> at nfdump.c
nfdump[0x100004a16] <+118>: mov    rax, qword ptr [rbp - 0x8]
nfdump[0x100004a1a] <+122>: movzx  ecx, word ptr [rax + 0x22]
nfdump[0x100004a1e] <+126>: cmp    ecx, 0x69
nfdump[0x100004a21] <+129>: sete   dl
nfdump[0x100004a24] <+132>: mov    byte ptr [rbp - 0x9], dl
nfdump[0x100004a27] <+135>: mov    al, byte ptr [rbp - 0x9]
nfdump[0x100004a2a] <+138>: and    al, 0x1
nfdump[0x100004a2c] <+140>: movzx  eax, al
nfdump[0x100004a2f] <+143>: pop    rbp
nfdump[0x100004a30] <+144>: ret    

nfdump`dofilter: -O3
nfdump[0x100003ee0] <+0>:  push   rbp
nfdump[0x100003ee1] <+1>:  mov    rbp, rsp
nfdump[0x100003ee4] <+4>:  movzx  ecx, word ptr [rdi + 0x20]
nfdump[0x100003ee8] <+8>:  mov    eax, 0x1
nfdump[0x100003eed] <+13>: cmp    cx, 0x6b
nfdump[0x100003ef1] <+17>: je     0x100003f14               ; <+52> at nfdump.c:353:1
nfdump[0x100003ef3] <+19>: add    ecx, -0x69
nfdump[0x100003ef6] <+22>: cmp    cx, 0x2
nfdump[0x100003efa] <+26>: jb     0x100003f14               ; <+52> at nfdump.c:353:1
nfdump[0x100003efc] <+28>: movzx  ecx, word ptr [rdi + 0x22]
nfdump[0x100003f00] <+32>: mov    edx, ecx
nfdump[0x100003f02] <+34>: or     edx, 0x1
nfdump[0x100003f05] <+37>: cmp    dx, 0x6b
nfdump[0x100003f09] <+41>: je     0x100003f14               ; <+52> at nfdump.c:353:1
nfdump[0x100003f0b] <+43>: xor    eax, eax
nfdump[0x100003f0d] <+45>: cmp    cx, 0x69
nfdump[0x100003f11] <+49>: sete   al
nfdump[0x100003f14] <+52>: pop    rbp
nfdump[0x100003f15] <+53>: ret    


StartNode: 5 Engine: Fast
Index: 1, Offset: 4, Mask: 000000000000ffff, Value: 0000000000000069, Superblock: 5, Numblocks: 0, OnTrue: 0, OnFalse: 2 Comp: 0 Function: none, Label: <none>
        Blocks: 
Index: 2, Offset: 4, Mask: 00000000ffff0000, Value: 0000000000690000, Superblock: 5, Numblocks: 0, OnTrue: 0, OnFalse: 3 Comp: 0 Function: none, Label: <none>
        Blocks: 
Index: 3, Offset: 4, Mask: 000000000000ffff, Value: 000000000000006a, Superblock: 5, Numblocks: 0, OnTrue: 0, OnFalse: 4 Comp: 0 Function: none, Label: <none>
        Blocks: 
Index: 4, Offset: 4, Mask: 00000000ffff0000, Value: 00000000006a0000, Superblock: 5, Numblocks: 0, OnTrue: 0, OnFalse: 0 Comp: 0 Function: none, Label: <none>
        Blocks: 
Index: 5, Offset: 4, Mask: 000000000000ffff, Value: 000000000000006b, Superblock: 5, Numblocks: 6, OnTrue: 0, OnFalse: 6 Comp: 0 Function: none, Label: <none>
        Blocks: 5 6 1 2 3 4 
Index: 6, Offset: 4, Mask: 00000000ffff0000, Value: 00000000006b0000, Superblock: 5, Numblocks: 0, OnTrue: 0, OnFalse: 1 Comp: 0 Function: none, Label: <none>
        Blocks: 
NumBlocks: 6

105 0x69
106 0x6a
107 0x6b

